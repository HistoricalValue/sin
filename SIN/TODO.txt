NEXT TODO TICKET                                ||
(please take a number and wait in the line...)  ||
Next number: 67                                 ||
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-//


============== HONOUR TODO ======================
*[050 2009-08-31/21:24] ELIMINATE CYCLES
*[051 2009-08-31/21:24] OPERATOR OVERLOADNIG



==== Always in mind ====
* check dynamic_castss

==== Do once ====


*[026] Make the testing framework serious (save results and print them later -- especially TestCollections should be serious)

*[032] Make following lib funcs.
		tostrin, strtonum, strsavetofile, typeof, input, print, println, openfile, closefile, writefile,
		readfile, totalarguments, arguments, objectcopy
		
		
*[043 2009-08-28/11:22] SINAlloc should call destructors on array members on delete[]
*[045 2009-08-28/14:37] Make libfuncs use the environment return value pointer and remove the return value stuff from the virtual state.
*[046 2009-08-30/21:13] Make use of deprecated functions be logged
*[047 2009-08-30/23:26] Make unary pre- and post- increment/decrement operators.
*[048 2009-08-31/00:21] Use the koutsop unary ops
*[052 2009-09-01/01:25] Delete temporaries at the end of statements.
*[053 2009-09-01/12:59] Implement const variables.
*[054 2009-09-01/13:02] Make correct checks for assigning to a const variable
*[058 2009-09-02/14:45] Define .~ for lvalues which do not return ASTs (generic Expressins etc)
*[060 2009-09-04/13:34] Remove all unused and duplicated ASTNodes (NotASTNode, ... )
*[061 2009-09-04/22:12] We need run time errors
*[062 2009-09-04/22:13] Merikh apotimish 
*[063 2009-09-04/22:30]	Correct lib function totalarguments
*[064 2009-09-05/01:50] Add statements and parentheses in AST
*[065 2009-09-05/13:39] Fix inserting global variables from different environments
*[066 2009-09-05/19:54(GMT-8)] Eliminate memory leaks from metacode

---logging---
*[010] LoggerFactory base should internally keep a list of produced loggers
  and validate them at destruction time (make sure the pointers are correct)
*[011] Add a "set all record printers" method to LoggerManager


----- Parser -----
*[057] Replace lvalue.ID, lvalue[expr], call.ID, call[expr] with expr.ID, expr[expr] (and get rid of all the reduce/reduce conflicts obviously)


==== QUESTIONS =====
* What about native object pointers? Why are they needed for the AST?
  A: AST pointers are fine
* What is the purpose of .~?
  A: For completeness
* What about extensible library functions? How can we add library functions?
  A: By adding code

==== BIG PLANS ====
* [DONE} Refactor Manage funcs to use the correct Tree

==== LOW PRIORITY ====
* SIN Functors
* [043 2009-08-28/02:03] Add "SymbolID()" in ID AST Nodes and keep their Name property descriptive (ex "local a")


===== IGNORED =====
*[020] Fix ASTNodes (the whole template inheritance style is bad)



===== DONE ====
*[001] Rename SinParserTester.h
  [ rudolf| has the correct name already]
*[002] SIN::Tests::Test::nextTestName() : fix static member initialisation
  [ rudolf| introduced class TestFactory]
*[003] Add default severity in LoggingManager
  [ rudolf| default severity property added (along with much refactoring again)]
*[005] Implement FileOutputStream-s
  [ rudolf| implemented it]
*[009] AST Const nodes give correct string name
  [ ilapost| done]
*[018] Fix lvcall in AST making
  [ ilapost| fixed]
*[017] Delete IDs and strings in AST parsing (Bison)
  [ ilapost| done]
*[006] Delete AST nodes (some day)
  [ ilapost| AST is deleted after visualization in SINParserTester.cpp]
*[007] Add a method DestroyTree() somewhere.
  [ ilapost| Added in SINTreeNode]
*[004] Make ASTNode subclasses give an appropriate name to their ASTNode ancestor
  [ ilapost| done]
*[015] Make a BufferedOutputStream.
  [ rudolf| added it]
*[008] Add unique ID for each ASTNode
  [ rudolf| Added ASTNodeFactory and using ID() or something]
*[012] FIX YYPARSE'S ARGUMENTS!! - ASTNode *& root   <--- return result in there
  [ koutsop | done]
*[013] Investigate the parser's auto-destruction callbacks on error and stuff
  [ koutsop | done]
*[014] Add error querying method in parser
  [ koutsop | done]
*[021] Implement DeleteAST()
  [ koutsop | done]
*[022] Add get for line of error
  [ koutsop | done]
*[023] Fix lex-util
  [ koutsop | done]
* "compile time" Warnings
  [ koutsop | done]
*[023] Implement an internal data type for SIN Object
   [ koutsop | done]
*[024] Implement an internal data type for SIN Object
  [ koutsop | done]
*[029] MemoryCellObject destructor decreases reference counter AND if refcounter==0 then delete obj too.
  [ koutsop | done]
*[030] Object's destructor deletes the  table elements.
  [ koutsop | done]
*[031] MemoryCell* MemoryCellClone()
  [ koutsop | done]
* string_cast -> to_string
  [ koutsop | done]
*[019] Fill up Symbol Table's tester
  [ koutsop | done it]
* Refactor SINTree: make it appropriate for bottom-up parsing (linking of nodes
  correctly, notification of ancestry changes, etc)
  [ rudolf | DID IT!]
*[016] Make a reserved type for all SIN-types and to_string them
  [ koutsop | done]
*[034] Refactor:rename:VM::VirtualMachine to VM::VirtualState
  [ rudolf | done]
*[035] Remove ST from libfunc arguments
  [ rudolf | done]
*[036] Remove Function * from PushFrame arguments (useless)
  [ rudolf | done]
*[037] Fix curr_frame in VirtualState (throws pointless assertions)
  [ rudolf | done]
*[038] Remove VirtualState from inside Library class
  [ rudolf | done]
*[035] Add Environment class
  [ rudolf@2009-08-26/23:28 | done]
*[039] Add scope id to ASTBlock
  [ rudolf@2009-08-27/00:55 | canceled]
*[037] Add scopes to parsing (koutsop only)
  [ rudolf@2009-08-27/00:56 | canceled]
*[034] Change virtual state to push and restore environment
  [ rudolf@2009-08-27/01:13 | done]
*[036] Refactor Symbol Table (koutsop knows how)
  [ koutsop | done]
*[038] Remove symbol table from ASTBlock
  [ rudolf | done]
*[044 2009-08-28/02:43] Fix parsing manage for functions to make something correct!
  [ rudolf | canceled]
*[041 2009-08-27/18:07] Implement operator== for aaaall the memory cell types.
  [ rudolf | canceled]
*[034] Refactor returnValue()s in VirtualState to use assign.
  [ rudolf | canceled]
*[025] Implement operator == for ASTNode
  [ koutsop | done]
*[028] Check for out of place "return" and "break" and "continue" (with counters in fabla).
  [ koutsop | done]
*[042 2009-08-27/18:12] Implement all kinds of binary operations among all types of memory cells (yeah, hahah).
  [ koutsop 2009-08-30/21:40 | done]
*[040 2009-08-27/01:47] Check and make correct the default and ESPECIALLY copy constructor AND destructor for the SymbolTable (koutsop only)
  [ koutsop 2009-08-31/10:18 | done]
*[027] Default ctor of LamdaFunctionASTNode should name automatically the node with $lamdaxxx
  [ koutsop 2009-08-31/11:24 | done]
*[049 2009-08-31/12:44] Make [function l(){}] produce an AST *exactly identical* to [l: (function(){})]
  [ koutsop 2009-08-31 | done]
*[033] Make manage functions for the fllowing rules:
		1) DOT '~'	'(' expr ')'
		2) DOT '~' call
		3) lvalue DOT KEYS_MEMBER
		4) lvalue DOT SIZE_MEMBER
		5) ',' objectfuncdef objectlists
		6) {
			objectfuncdef:	FUNCTION ID	'(' idlist ')' block
							|	FUNCTION '(' idlist ')' block
		}
  [ koutsop, ilapost 2009-09-02 | done]
*[056 2009-09-01/13:04] Change in grammar the rule parse string. Convert STRING to Expression
  [ koutsop 2009-09-04 | done ]
*[055 2009-09-01/13:04] Refactor all member access evaluation to reuse the common code
  [ rudolf 2009-09-04 | done ]
*[059 2009-09-02/15:01] Make cloned memcellASTs clone their tree
  [ rudolf 2009-09-04/15:25 | done]
