==== Always in mind ====
* check dynamic_castss

==== Do once ====

*[016] Make a reserved type for all SIN-types and to_string them

*[019] Fill up Symbol Table's tester

*[025] Implement operator == for ASTNode

*[026] Make the testing framework serious (save results and print them later -- especially TestCollections should be serious)
*[027] Default ctor of LamdaFunctionASTNode should name automatically the node with $lamdaxxx

---logging---
*[010] LoggerFactory base should internally keep a list of produced loggers
  and validate them at destruction time (make sure the pointers are correct)
*[011] Add a "set all record printers" method to LoggerManager


----- Parser -----
*[028] Check for out of place "return" and "break" and "continue" (with counters in fabla).



==== QUESTIONS =====
* What about native object pointers? Why are they needed for the AST?
  A: AST pointers are fine
* What is the purpose of .~?
  A: For completeness
* What about extensible library functions? How can we add library functions?
  A: By adding code

==== BIG PLANS ====
* Refactor SINTree: make it appropriate for bottom-up parsing (linking of nodes
  correctly, notification of ancestry changes, etc)
* Refactor Manage funcs to use the correct Tree

==== LOW PRIORITY ====
* SIN Functors



===== IGNORED =====
*[020] Fix ASTNodes (the whole template inheritance style is bad)



===== DONE ====
*[001] Rename SinParserTester.h
  [ rudolf| has the correct name already]
*[002] SIN::Tests::Test::nextTestName() : fix static member initialisation
  [ rudolf| introduced class TestFactory]
*[003] Add default severity in LoggingManager
  [ rudolf| default severity property added (along with much refactoring again)]
*[005] Implement FileOutputStream-s
  [ rudolf| implemented it]
*[009] AST Const nodes give correct string name
  [ ilapost| done]
*[018] Fix lvcall in AST making
  [ ilapost| fixed]
*[017] Delete IDs and strings in AST parsing (Bison)
  [ ilapost| done]
*[006] Delete AST nodes (some day)
  [ ilapost| AST is deleted after visualization in SINParserTester.cpp]
*[007] Add a method DestroyTree() somewhere.
  [ ilapost| Added in SINTreeNode]
*[004] Make ASTNode subclasses give an appropriate name to their ASTNode ancestor
  [ ilapost| done]
*[015] Make a BufferedOutputStream.
  [ rudolf| added it]
*[008] Add unique ID for each ASTNode
  [ rudolf| Added ASTNodeFactory and using ID() or something]
*[012] FIX YYPARSE'S ARGUMENTS!! - ASTNode *& root   <--- return result in there
  [ koutsop | done]
*[013] Investigate the parser's auto-destruction callbacks on error and stuff
  [ koutsop | done]
*[014] Add error querying method in parser
  [ koutsop | done]
*[021] Implement DeleteAST()
  [ koutsop | done]
*[022] Add get for line of error
  [ koutsop | done]
*[023] Fix lex-util
  [ koutsop | done]
* "compile time" Warnings
  [ koutsop | done]
*[023] Implement an internal data type for SIN Object
   [ koutsop | done]
*[024] Implement an internal data type for SIN Object
  [ koutsop | done]
*[029] MemoryCellObject destructor decreases reference counter AND if refcounter==0 then delete obj too.
  [ koutsop | done]
*[030] Object's destructor deletes the  table elements.
  [ koutsop | done]
*[031] MemoryCell* MemoryCellClone()
  [ koutsop | done]
* string_cast -> to_string
  [ koutsop | done]