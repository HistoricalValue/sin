#include "SINASTUnparseTreeVisitor.h"

#include <stdio.h>
#include <iostream>

#include "Common.h"
#include "SINAssert.h"
#include "SINASTNodes.h"
#include "SINTreeNode.h"
#include "SINConstants.h"

#define SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(NODENAME)				\
	void ASTUnparseTreeVisitor::Visit(NODENAME##ASTNode & _node) {				\
		Visit(static_cast<ASTNode &>(_node));									\
	}

#define SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(NODENAME)	\
	void ASTUnparseTreeVisitor::Visit(NODENAME##ASTNode & _node) {				\
		unparseString = unparseString + _node.Name();							\
	}

#define SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(NODENAME, SYMBOL)	\
	void ASTUnparseTreeVisitor::Visit(NODENAME##ASTNode & _node) {						\
		SINASSERT(_node.NumberOfChildren() == 2);										\
		ASTNode::iterator kid = _node.begin();											\
		static_cast<ASTNode &>(*kid++).Accept(this);									\
		unparseString = unparseString + to_string(SYMBOL);								\
		static_cast<ASTNode &>(*kid++).Accept(this);									\
	}




namespace SIN {

	ASTUnparseTreeVisitor::ASTUnparseTreeVisitor(void) : unparseString("") {}

	ASTUnparseTreeVisitor::~ASTUnparseTreeVisitor() {}

	void ASTUnparseTreeVisitor::Visit(ASTNode & _node) 
		{	SINASSERT(false);	}


	//-----------------------------------------------------------------
	
	void ASTUnparseTreeVisitor::Visit(SinCodeASTNode & _node) {	
		for (ASTNode::iterator kid = _node.begin(); kid != _node.end(); ++kid) {
			static_cast<ASTNode &>(*kid).Accept(this);
			
			if (_node.Type() != SINASTNODES_FUNCTION_TYPE	&&
				_node.Type() != SINASTNODES_BLOCK_TYPE		&&
				_node.Type() != SINASTNODES_FOR_TYPE		&&
				_node.Type() != SINASTNODES_WHILE_TYPE		&&
				_node.Type() != SINASTNODES_IF_TYPE			&&
				_node.Type() != SINASTNODES_IFELSE_TYPE
				)
				unparseString = unparseString + to_string(";\n");
		}
		//SINASSERT(false);	
	}

	//-----------------------------------------------------------------
	
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(Number	)
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(String	)
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(Nil		)
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(True		)
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(False	)
	SIN_UNPARSE_TREE_VISITOR_WITH_NO_CHILDREN_VISIT_DEFINITION(ID		)



	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Assign, " = "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Add,	" + "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Sub,	" - "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Mul,	" * "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Div,	" / "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Mod,	" % "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Lt,		" < "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Gt,		" > "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Le,		" <= "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Ge,		" >= "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Eq,		" == "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Ne,		" != "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(And,	" and "	)
	SIN_UNPARSE_TREE_VISITOR_WITH_TWO_CHILDREN_VISIT_DEFINITION(Or,		" or "	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Not)
	

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(For		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ForPreamble)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ForAddendum)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(While		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(If			)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(IfElse		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Return		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Semicolon	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Break		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Continue	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Block		)



	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(NormalCall		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MethodCall		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(FuncdefCall	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ActualArguments)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ExpressionList	)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Function		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(LamdaFunction	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(FormalArguments)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(LocalID	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(GlobalID	)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(PreIncr	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(PostIncr	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(PreDecr	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(PostDecr	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(UnaryNot	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(UnaryMin	)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(Object			)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(EmptyObject	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(UnindexedMember)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(IndexedMember	)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ObjectMember	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(ObjectIndex	)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(CallMember		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(CallIndex		)

	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MetaParse			)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MetaPreserve		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MetaEvaluate		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MetaUnparse		)
	SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(MetaParseString	)
	//SIN_UNPARSE_TREE_VISITOR_DEFAULT_VISIT_DEFINITION(SinCode			)

} // namespace SIN
